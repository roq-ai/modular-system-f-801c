generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business_application {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @db.VarChar(255)
  configuration   String
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  feedback        feedback[]
}

model feedback {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content                 String
  user_id                 String?               @db.Uuid
  business_application_id String?               @db.Uuid
  created_at              DateTime              @default(now()) @db.Timestamp(6)
  updated_at              DateTime              @default(now()) @db.Timestamp(6)
  business_application    business_application? @relation(fields: [business_application_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                    user?                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description          String?                @db.VarChar(255)
  image                String?                @db.VarChar(255)
  name                 String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  user_id              String                 @db.Uuid
  tenant_id            String                 @db.VarChar(255)
  business_application business_application[]
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  feedback     feedback[]
  organization organization[]
}
